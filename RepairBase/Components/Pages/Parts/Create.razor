@page "/Parts/create"
@inject IPartsService PartsService
@inject IJSRuntime js
@inject NavigationManager navManager
@rendermode InteractiveServer
<h3>Create Parts</h3>
<EditForm Model="Parts" OnValidSubmit="HandlePartsCreate">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <br />
    <div class="row">
        <div class="col-4">
            <div class="form-group row p-1">
                <div class="col-6">
                    <label for="Parts.PN">Part Number (P/N)</label>
                </div>
                <div class="col-6">
                    <InputText @bind-Value="Parts.PN" class="form-control"></InputText>
                    <ValidationMessage For="@(() => Parts.PN)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-6">
                    <label for="Parts.CompatiblePN">Compatible P/N</label>
                </div>
                <div class="col-6">
                    <InputTextArea @bind-Value="Parts.CompatiblePN" class="form-control"></InputTextArea>
                    <ValidationMessage For="@(() => Parts.CompatiblePN)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-6">
                    <label for="Parts.AddPNComments">Additional P/N Comments</label>
                </div>
                <div class="col-6">
                    <InputText @bind-Value="Parts.AddPNComments" class="form-control"></InputText>
                    <ValidationMessage For="@(() => Parts.AddPNComments)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-6">
                    <label for="Parts.Type">Additional P/N Comments</label>
                </div>
                <div class="col-6">
                    <InputSelect @bind-Value="Parts.Type" class="form-select" id="author">
                        <option value="">-- Select Parts Type --</option>
                        @foreach (var value in Enum.GetValues<PartsType>())
                        {
                            <option value="@value">@value</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-6">
                    <label for="Parts.LaptopModel">Laptop Model</label>
                </div>
                <div class="col-6">
                    <InputText @bind-Value="Parts.LaptopModel" class="form-control"></InputText>
                    <ValidationMessage For="@(() => Parts.LaptopModel)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-6">
                    <label for="Comment">Is URL ?</label>
                </div>
                <div class="col-6">
                    <InputRadioGroup @bind-Value="@Parts.IsURL">
                        <label>
                            <InputRadio Value="true" />
                            yes
                        </label>
                        <label>
                            <InputRadio Value="false" />
                            no
                        </label>
                    </InputRadioGroup>
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-6">
                    <label for="Parts.Image">Image</label>
                </div>
                <div class="col-6">
                    <InputText @bind-Value="Parts.Image" class="form-control"></InputText>
                    <ValidationMessage For="@(() => Parts.Image)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-6">
                    <label for="Parts.Location">Location</label>
                </div>
                <div class="col-6">
                    <InputText @bind-Value="Parts.Location" class="form-control"></InputText>
                    <ValidationMessage For="@(() => Parts.Location)" />
                </div>
            </div>
            <div class="form-group row p-1">
                <div class="col-6">
                    <label for="Parts.Comments">Comments</label>
                </div>
                <div class="col-6">
                    <InputTextArea @bind-Value="Parts.Comments" class="form-control"></InputTextArea>
                    <ValidationMessage For="@(() => Parts.Comments)" />
                </div>
            </div>

        </div>

    </div>

    <br />
    <button class="btn btn-primary" type="submit">
        <span class="oi oi-pencil"></span>
        Create Parts
    </button>
    <button @onclick="BackToList" class="btn btn-outline-secondary">
        <span class="oi oi-media-skip-backward"></span>
        Back To List
    </button>

</EditForm>

@code {
    private Parts Parts = new Parts();
    private async Task HandlePartsCreate()
    {
        BackToList();
        var response = await PartsService.Create(Parts);
        if (response.Success)
        {
            BackToList();
        }
    }
    private void BackToList()
    {
        navManager.NavigateTo("/Parts/");
    }
}
